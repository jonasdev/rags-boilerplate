{"ast":null,"code":"import _slicedToArray from \"/Users/jonaskristensen/dev/react-apollo-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jonaskristensen/dev/react-apollo-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jonaskristensen/dev/react-apollo-boilerplate/src/components/component.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  height: 100vh;\\n  display: flex;\\n  flex-wrap: wrap;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_THUMBNAILS } from \"../queries/getthumbnails\";\nimport styled from \"styled-components\";\nconst Container = styled.section(_templateObject());\n\nfunction Component() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        index = _useState2[0],\n        setIndex = _useState2[1];\n\n  const _useQuery = useQuery(GET_THUMBNAILS),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  useEffect(() => {\n    if (!data) return;\n    setInterval(() => {\n      setIndex(Math.floor(Math.random() * data.photos.length));\n    }, 300);\n  }, [data]);\n\n  if (loading) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  if (error) {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, error.message);\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, data.photos.map((photo, key) => React.createElement(\"img\", {\n    key: \"\".concat(photo, \"-\").concat(key),\n    className: key === index ? 'active' : '',\n    src: photo.thumbnailUrl,\n    alt: photo.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"react-apollo-boilerplate\"));\n}\n\nexport default Component;","map":{"version":3,"sources":["/Users/jonaskristensen/dev/react-apollo-boilerplate/src/components/component.jsx"],"names":["React","useEffect","useState","useQuery","GET_THUMBNAILS","styled","Container","section","Component","index","setIndex","loading","error","data","setInterval","Math","floor","random","photos","length","message","map","photo","key","thumbnailUrl","title"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,OAAV,mBAAf;;AAMA,SAASC,SAAT,GAAqB;AAAA,oBACON,QAAQ,EADf;AAAA;AAAA,QACZO,KADY;AAAA,QACLC,QADK;;AAAA,oBAEcP,QAAQ,CAACC,cAAD,CAFtB;AAAA,QAEXO,OAFW,aAEXA,OAFW;AAAA,QAEFC,KAFE,aAEFA,KAFE;AAAA,QAEKC,IAFL,aAEKA,IAFL;;AAInBZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACY,IAAL,EAAW;AAEXC,IAAAA,WAAW,CAAC,MAAM;AAChBJ,MAAAA,QAAQ,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAAL,CAAYC,MAAvC,CAAD,CAAR;AACD,KAFU,EAER,GAFQ,CAAX;AAGD,GANQ,EAMN,CAACN,IAAD,CANM,CAAT;;AAQA,MAAIF,OAAJ,EAAa;AACX,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,MAAIC,KAAJ,EAAW;AACT,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACQ,OAAV,CAAP;AACD;;AAED,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAACK,MAAL,CAAYG,GAAZ,CAAgB,CAACC,KAAD,EAAQC,GAAR,KACf;AAAK,IAAA,GAAG,YAAKD,KAAL,cAAcC,GAAd,CAAR;AAA6B,IAAA,SAAS,EAAEA,GAAG,KAAKd,KAAR,GAAgB,QAAhB,GAA2B,EAAnE;AAAuE,IAAA,GAAG,EAAEa,KAAK,CAACE,YAAlF;AAAgG,IAAA,GAAG,EAAEF,KAAK,CAACG,KAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAJF,CADF;AAQD;;AAED,eAAejB,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { GET_THUMBNAILS } from \"../queries/getthumbnails\";\nimport styled from \"styled-components\";\n\nconst Container = styled.section`\n  height: 100vh;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nfunction Component() {\n  const [index, setIndex] = useState();\n  const { loading, error, data } = useQuery(GET_THUMBNAILS);\n\n  useEffect(() => {\n    if (!data) return;\n\n    setInterval(() => {\n      setIndex(Math.floor(Math.random() * data.photos.length))\n    }, 300)\n  }, [data])\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error.message}</p>;\n  }\n\n  return (\n    <Container>\n      {data.photos.map((photo, key) => (\n        <img key={`${photo}-${key}`} className={key === index ? 'active' : ''} src={photo.thumbnailUrl} alt={photo.title} />\n      ))}\n      <h1>react-apollo-boilerplate</h1>\n    </Container>\n  );\n}\n\nexport default Component;\n"]},"metadata":{},"sourceType":"module"}